// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wallet.Persistence;

#nullable disable

namespace Wallet.Persistence.Migrations
{
    [DbContext(typeof(WalletContext))]
    [Migration("20230228160408_Walletv1")]
    partial class Walletv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Wallet.Domain.Flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Kind")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentFlowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentFlowId");

                    b.ToTable("Flows");
                });

            modelBuilder.Entity("Wallet.Domain.FlowConnection", b =>
                {
                    b.Property<int>("InFlowId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutFlowId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PercentOfFlow")
                        .HasColumnType("REAL");

                    b.Property<double>("TotalAmountInsideFlow")
                        .HasColumnType("REAL");

                    b.HasKey("InFlowId", "OutFlowId");

                    b.HasIndex("OutFlowId");

                    b.ToTable("FlowConnections");
                });

            modelBuilder.Entity("Wallet.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Wallet.Domain.Flow", b =>
                {
                    b.HasOne("Wallet.Domain.Flow", "ParentFlow")
                        .WithMany("Flows")
                        .HasForeignKey("ParentFlowId");

                    b.Navigation("ParentFlow");
                });

            modelBuilder.Entity("Wallet.Domain.FlowConnection", b =>
                {
                    b.HasOne("Wallet.Domain.Flow", "InFlow")
                        .WithMany("Connections")
                        .HasForeignKey("InFlowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Wallet.Domain.Flow", "OutFlow")
                        .WithMany()
                        .HasForeignKey("OutFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InFlow");

                    b.Navigation("OutFlow");
                });

            modelBuilder.Entity("Wallet.Domain.Flow", b =>
                {
                    b.Navigation("Connections");

                    b.Navigation("Flows");
                });
#pragma warning restore 612, 618
        }
    }
}
